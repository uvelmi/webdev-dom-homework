/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./api.js":
/*!****************!*\
  !*** ./api.js ***!
  \****************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addTodo: () => (/* binding */ addTodo),\n/* harmony export */   fetchAndRenderComments: () => (/* binding */ fetchAndRenderComments),\n/* harmony export */   loginUser: () => (/* binding */ loginUser),\n/* harmony export */   registerUser: () => (/* binding */ registerUser)\n/* harmony export */ });\n/* harmony import */ var _render_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./render.js */ \"./render.js\");\n\n\nconst host = 'https://wedev-api.sky.pro/api/v2/elena-uvarova/comments'\n\nfunction fetchAndRenderComments() {\n    fetch(host, {\n        method: 'GET',\n        headers: {\n            Authorization: _render_js__WEBPACK_IMPORTED_MODULE_0__.token,\n        },\n    })\n        .then((response) => {\n            if (response.status === 401) {\n                throw new Error('Нет авторизации')\n            }\n            return response.json()\n        })\n        .then((responseData) => {\n            let appComments = responseData.comments.map((comment) => {\n\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\n                    name: comment.author.name,\n                    date: new Date(comment.date).toLocaleTimeString('sm', { day: '2-digit', month: '2-digit', year: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' }).replace(\", \", \" \"),\n                    comment: comment.text,\n                    like: comment.likes,\n                    user: comment.user,\n                    userLike: false,\n                    isEdit: false,\n                    id: comment.id,\n                }\n            })\n\n            let comments = appComments\n            return (0,_render_js__WEBPACK_IMPORTED_MODULE_0__.renderApp)(comments)\n        })\n}\n\nfunction addTodo(savedUserName, commentInputElement, buttonElement) {\n    fetch(host, {\n        method: 'POST',\n        body: JSON.stringify({\n            name: savedUserName.value,\n            text: commentInputElement.value\n                .replaceAll('&', '&amp;')\n                .replaceAll('<', '&lt;')\n                .replaceAll('>', '&gt;')\n                .replaceAll('\"', '&quot;')\n                .replaceAll(' ', '&nbsp;'),\n            forceError: true,\n        }),\n        headers: {\n            Authorization: _render_js__WEBPACK_IMPORTED_MODULE_0__.token,\n        },\n    })\n        .then((response) => {\n            if (response.status === 500) {\n                throw new Error('Ошибка сервера. Повторите позже')\n            }\n\n            if (response.status === 400) {\n                throw new Error(\n                    alert(\n                        'Имя и комментарий должны быть не короче 3-х символов',\n                    ),\n                )\n            }\n\n            if (response.status === 201) {\n                return response.json()\n            }\n        })\n\n        .then((response) => {\n            return fetchAndRenderComments()\n        })\n        .then(() => {\n            buttonElement.disabled = false\n            buttonElement.textContent = 'Написать'\n            commentInputElement.value = ''\n            commentInputElement.disabled = false\n            buttonElement.disabled = false\n        })\n        .catch((error) => {\n            buttonElement.disabled = false\n            buttonElement.textContent = 'Написать'\n            commentInputElement.disabled = false\n            buttonElement.disabled = false\n            console.warn(error)\n\n            if (error.message === 'Ошибка сервера. Повторите позже') {\n                alert('Ошибка сервера.')\n                addTodo(text)\n            } else {\n                alert(\n                    'Пожалуйста, проверьте подключение к сети и попробуйте снова.',\n                )\n            }\n            postMessage(error)\n        })\n}\n\nfunction loginUser({ login, password }) {\n    return fetch('https://wedev-api.sky.pro/api/user/login', {\n        method: 'POST',\n        body: JSON.stringify({\n            login,\n            password,\n        }),\n    })\n        .then((response) => {\n            if (response.status === 400) {\n                throw new Error('Неверный логин или пароль')\n            }\n            return response.json()\n        })\n\n        .catch((error) => {\n            if (error.message === 'Failed to fetch') {\n                alert('Кажется, у вас сломался интернет, попробуйте позже')\n            }\n            return loginUser({ login, password })\n        })\n}\n\nfunction registerUser({ name, login, password }) {\n    return fetch('https://wedev-api.sky.pro/api/user', {\n        method: 'POST',\n        body: JSON.stringify({\n            name,\n            login,\n            password,\n        }),\n    }).then((response) => {\n        if (response.status === 400) {\n            throw new Error('Такой пользователь уже существует')\n        }\n        return response.json()\n    })\n}\n\n\n//# sourceURL=webpack://8/./api.js?");

/***/ }),

/***/ "./components/login-components.js":
/*!****************************************!*\
  !*** ./components/login-components.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   renderLoginComponent: () => (/* binding */ renderLoginComponent)\n/* harmony export */ });\n/* harmony import */ var _render_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../render.js */ \"./render.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../api.js */ \"./api.js\");\n\n\n\nfunction renderLoginComponent({ setToken, fetchAndRenderComments }) {\n    let isLoginMode = true\n\n    function renderForm() {\n        const appHtml = `<div class=\"container\" id=\"register\">\n\n\t<div class=\"add-form\">\n\t\t<h3 class=\"add-form-title\">Форма ${isLoginMode ? 'входа' : 'регистрации'}</h3>\n\t\t${isLoginMode ? '' : `<input type=\"text\" class=\"add-form-name add-name add-name\" placeholder=\"Введите имя\" id=\"name-input\"/>`}\n\t\t<input\n\t\t  type=\"text\"\n\t\t  class=\"add-form-name add-name\"\n\t\t  placeholder=\"Введите логин\"\n\t\t  id=\"login-input\"\n\t\t/>\n\t\t<input\n\t\t  type=\"password\"\n\t\t  class=\"add-form-text add-name\"\n\t\t  placeholder=\"Введите пароль\"\n\t\t  rows=\"4\"\n\t\t  id=\"password-input\"\n\t\t/>\n\t \n\t\t<div class=\"add-form-row\">\n\t\t <button type=\"submit\" id=\"login-button\" class=\"add-form-button post-button\">${isLoginMode ? 'Войти' : 'Зарегистрироваться'}</button>\n\t\t  \n\t\t</div>\n\t\t<div class=\"add-form-row\">\n\t\t <button type=\"submit\" id=\"toggle-button\" class=\"add-form-button post-button\">${isLoginMode ? 'Зарегистрироваться ' : 'Войти'}</button>\n\t\t</div>\n</div>`\n\n        const appEl = document.getElementById('app')\n\n        appEl.innerHTML = appHtml\n\n        document\n            .getElementById('login-button')\n            .addEventListener('click', () => {\n                if (isLoginMode) {\n                    const login = document.getElementById('login-input').value\n                    const password =\n                        document.getElementById('password-input').value\n                    // setToken(\"Bearer asb4c4boc86gasb4c4boc86g37w3cc3bo3b83k4g37k3bk3cg3c03ck4k\");\n                    if (!login) {\n                        alert('Введите логин')\n                        return\n                    }\n                    if (!password) {\n                        alert('Введите пароль')\n                        return\n                    }\n\n                    (0,_api_js__WEBPACK_IMPORTED_MODULE_1__.loginUser)({\n                        login: login,\n                        password: password,\n                    })\n                        .then((user) => {\n                            localStorage.setItem('user', user.user.name)\n                            setToken(`Bearer ${user.user.token}`)\n                            ;(0,_render_js__WEBPACK_IMPORTED_MODULE_0__.setUser)(user.user.name)\n                            fetchAndRenderComments()\n                        })\n                        .catch((error) => {\n                            alert(error.message)\n                        })\n                } else {\n                    const name = document.getElementById('name-input').value\n                    const login = document.getElementById('login-input').value\n                    const password =\n                        document.getElementById('password-input').value\n\n                    if (!name) {\n                        alert('Введите имя')\n                        return\n                    }\n                    if (!login) {\n                        alert('Введите логин')\n                        return\n                    }\n                    if (!password) {\n                        alert('Введите пароль')\n                        return\n                    }\n\n                    (0,_api_js__WEBPACK_IMPORTED_MODULE_1__.registerUser)({\n                        name: name,\n                        login: login,\n                        password: password,\n                    })\n                        .then((user) => {\n                            setToken(`Bearer ${user.user.token}`)\n                            fetchAndRenderComments()\n                        })\n                        .catch((error) => {\n                            alert(error.message)\n                        })\n                }\n            })\n\n        document\n            .getElementById('toggle-button')\n            .addEventListener('click', () => {\n                isLoginMode = !isLoginMode\n                renderForm()\n            })\n    }\n    renderForm()\n}\n\n\n//# sourceURL=webpack://8/./components/login-components.js?");

/***/ }),

/***/ "./main.js":
/*!*****************!*\
  !*** ./main.js ***!
  \*****************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addSignElement: () => (/* binding */ addSignElement),\n/* harmony export */   commentElement: () => (/* binding */ commentElement),\n/* harmony export */   commentElementsQuoted: () => (/* binding */ commentElementsQuoted),\n/* harmony export */   commentInputElement: () => (/* binding */ commentInputElement),\n/* harmony export */   comments: () => (/* binding */ comments),\n/* harmony export */   editButtonsComment: () => (/* binding */ editButtonsComment),\n/* harmony export */   handleEdit: () => (/* binding */ handleEdit),\n/* harmony export */   handleSave: () => (/* binding */ handleSave),\n/* harmony export */   likes: () => (/* binding */ likes),\n/* harmony export */   listElement: () => (/* binding */ listElement),\n/* harmony export */   nameInputElement: () => (/* binding */ nameInputElement),\n/* harmony export */   saveButtons: () => (/* binding */ saveButtons)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api.js */ \"./api.js\");\n/* harmony import */ var _render_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./render.js */ \"./render.js\");\n\n\n\nconst listElement = document.getElementById('list')\nconst commentElement = document.querySelector('.comments')\nconst nameInputElement = document.getElementById('name-input')\nconst commentInputElement = document.getElementById('comment-input')\n\nconst addSignElement = document.getElementById('add-sign')\n\nwindow.addEventListener('load', function () {\n    const addSign = document.getElementById('add-sign')\n    const list = document.getElementById('list')\n    if (addSign && list) {\n        addSign.innerHTML = 'Пожалуйста, подождите, загружаются комментарии...'\n        list.value = ''\n        list.style.display = 'none'\n\n        return delayForSecond().then(() => {\n            addSign.style.display = 'none'\n            list.style.display = 'flex'\n        })\n    }\n})\n\nfunction delayForSecond() {\n    return delay(3000)\n}\n\nfunction delay(interval = 2000) {\n    return new Promise((resolve) => {\n        setTimeout(() => {\n            resolve()\n        }, interval)\n    })\n}\n\nlet comments = []\n\n;(0,_api_js__WEBPACK_IMPORTED_MODULE_0__.fetchAndRenderComments)()\n\nfunction likes(comments) {\n    function delay2(interval = 300) {\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                resolve()\n            }, interval)\n        })\n    }\n\n    const likeButtons = document.querySelectorAll('.like-button')\n\n    for (const likeButton of likeButtons) {\n        likeButton.addEventListener('click', (event) => {\n            event.stopPropagation()\n            const index = likeButton.dataset.index\n            const comment = comments[index]\n\n            likeButton.classList.add('animating')\n\n            delay2(2000).then(() => {\n                likeButton.classList.remove('animating')\n\n                if (!comment.userLike) {\n                    comment.filling = '-active-like'\n                    comment.like += 1\n                    comment.userLike = true\n                } else {\n                    comment.filling = ''\n                    comment.like -= 1\n                    comment.userLike = false\n                }\n                (0,_render_js__WEBPACK_IMPORTED_MODULE_1__.renderApp)(comments)\n            })\n        })\n    }\n}\nlikes(comments)\n\nfunction handleEdit(comments) {\n    const handleEditElements = document.querySelectorAll('.editing')\n    for (const handleEditElement of handleEditElements) {\n        handleEditElement.addEventListener('click', (event) => {\n            event.stopPropagation()\n            comments[index].isEdit = true\n            ;(0,_render_js__WEBPACK_IMPORTED_MODULE_1__.renderApp)(comments)\n            listElement\n                .querySelectorAll('.comment')\n                [index].querySelector('.save-button').style.display = 'block'\n            ;(0,_render_js__WEBPACK_IMPORTED_MODULE_1__.renderApp)(comments)\n        })\n    }\n}\n\nfunction isCommentEmpty(comment) {\n    const commentInputElement = document.getElementById('comment-input')\n    const isEmpty = comment.trim() === ''\n    if (isEmpty) {\n        commentInputElement.classList.add('error')\n    } else {\n        commentInputElement.classList.remove('error')\n    }\n    return isEmpty\n}\n\nfunction handleSave(comments) {\n    const handleSaveElements = document.querySelectorAll('.saving')\n    for (const handleSaveElement of handleSaveElements) {\n        handleSaveElement.addEventListener('click', (event) => {\n            event.stopPropagation()\n            const index = handleSaveElement.dataset.index\n            const comment = comments[index]\n            const listElement = document.getElementById('list')\n            const editedComment = listElement\n                .querySelectorAll('.comment')\n                [\n                    handleSaveElement.dataset.index\n                ].querySelector('.comment-input').value\n            if (isCommentEmpty(editedComment)) {\n                return\n            }\n            comments[index].comment = editedComment\n            comments[index].isEdit = false\n\n            listElement\n                .querySelectorAll('.comment')\n                [index].querySelector('.save-buttons').style.display = 'none'\n            ;(0,_render_js__WEBPACK_IMPORTED_MODULE_1__.renderApp)(comments)\n        })\n    }\n}\n\nfunction editButtonsComment(comments) {\n    const editButtons = document.querySelectorAll('.edit-button')\n    editButtons.forEach((button, index) => {\n        button.addEventListener('click', (event) => {\n            event.stopPropagation()\n            comments[index].isEdit = true\n            ;(0,_render_js__WEBPACK_IMPORTED_MODULE_1__.renderApp)(comments)\n        })\n    })\n}\n\nfunction commentElementsQuoted(comments, token) {\n    let commentElements = document.querySelectorAll('.comment')\n\n    for (const commentsElement of commentElements) {\n        commentsElement.addEventListener('click', () => {\n            const indexQuoted = commentsElement.dataset.index\n            const commentInputElement = document.getElementById('comment-input')\n            if (!token) {\n                if (commentInputElement) {\n                    if (!comments[indexQuoted].isEdit) {\n                        commentInputElement.value = `${comments[indexQuoted].comment.replaceAll('&nbsp;', ' ')}\\n\\n @ ${comments[indexQuoted].name.replaceAll('&nbsp;', ' ')},`\n                    }\n                }\n            }\n            return\n        })\n    }\n}\n\nfunction saveButtons(comments) {\n    const saveButtons = document.querySelectorAll('.save-button')\n    saveButtons.forEach((button, index) => {\n        button.addEventListener('click', (event) => {\n            event.stopPropagation()\n            const editedComment =\n                button.parentNode.nextElementSibling.querySelector(\n                    '.comment-input',\n                ).value\n            comments[index].comment = editedComment\n            comments[index].isEdit = false\n            ;(0,_render_js__WEBPACK_IMPORTED_MODULE_1__.renderApp)(comments)\n        })\n    })\n}\n// import { compareAsc, format } from \"date-fns\";\n\n// format(new Date(), \"dd.MM.yyyy hh:mm:ss\");\n\n\n// const now = [\n// \tnew Date(),\n// ]\t\n// now.sort(compareAsc);\n// export function dateData() {\n//     let currentDate = new Date(formattedDate)\n\n//     let day =\n//         currentDate.getDate() < 10\n//             ? '0' + currentDate.getDate()\n//             : currentDate.getDate()\n//     let month =\n//         currentDate.getMonth() < 10\n//             ? '0' + currentDate.getMonth()\n//             : currentDate.getMonth()\n//     let year = currentDate.getFullYear().toString().slice(-2)\n//     let hours =\n//         currentDate.getHours() < 10\n//             ? '0' + currentDate.getHours()\n//             : currentDate.getHours()\n//     let minutes =\n//         currentDate.getMinutes() < 10\n//             ? '0' + currentDate.getMinutes()\n//             : currentDate.getMinutes()\n//     let formattedDate = `${day}.${month}.${year} ${hours}:${minutes}`\n// }\ndocument.addEventListener('keyup', (event) => {\n    if (event.key === 'Enter') {\n        buttonElement.click()\n    }\n})\n\n\n//# sourceURL=webpack://8/./main.js?");

/***/ }),

/***/ "./render.js":
/*!*******************!*\
  !*** ./render.js ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buttonElement: () => (/* binding */ buttonElement),\n/* harmony export */   nameInputElement: () => (/* binding */ nameInputElement),\n/* harmony export */   renderApp: () => (/* binding */ renderApp),\n/* harmony export */   setUser: () => (/* binding */ setUser),\n/* harmony export */   token: () => (/* binding */ token),\n/* harmony export */   user: () => (/* binding */ user)\n/* harmony export */ });\n/* harmony import */ var _main_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./main.js */ \"./main.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./api.js */ \"./api.js\");\n/* harmony import */ var _components_login_components_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/login-components.js */ \"./components/login-components.js\");\n\n\n\n\nconst buttonElement = document.getElementById('add-button')\nconst nameInputElement = document.getElementById('name-input')\n\nlet token =\n    'Bearer asb4c4boc86gasb4c4boc86g37w3cc3bo3b83k4g37k3bk3cg3c03ck4k'\ntoken = null\nlet user = localStorage.getItem('user')\n\nfunction setUser(newUser) {\n    user = newUser\n}\n\nconst renderApp = (comments) => {\n    const appEl = document.getElementById('app')\n\n    const commentsHtml = comments\n        .map((comment, index) => {\n            if (comment.isEdit) {\n                return `\n\t  <li class=\"comment\" data-index=\"${index}\" >\n\t<div class=\"comment-header\">\n\t  <div>${comment.name} </div>\n\t  <div>${comment.date}</div>\n\t  \n\t</div>\n\t<div class=\"comment-body\">\n\t\t\t\t\t  <div class=\"comment-text\" >\n\t\t\t\t\t\t <textarea data-index=\"${index}\" class=\"comment-input add-text\" rows=\"4\">${comment.comment}</textarea>\n\t\t\t\t\t\t <button type=\"submit\" data-index='${index}' class=\"save-buttons add-form-button saving post-button\">Сохранить</button> \n\t\t\t\t\t  </div>\n\t\t\t\t\t</div>\n\t\t\t\t </li>\n\t\t\t  `\n            } else {\n                return `\n\t\t\t  <li class=\"comment\" data-index=\"${index}\">\n\t\t\t\t <div class=\"comment-header\">\n\t\t\t\t\t<div class=\"comment-name\" data-index='${index}'>${comment.name}</div>\n\t\t\t\t\t<div>${comment.date}</div>     \n\t\t\t  </div>\n\t\t\t\t <div class=\"comment-body\">\n\t\t\t\t\t<div class=\"comment-text\" data-index=\"${index}\">\n\t\t\t\t\t  <span data-index='${index}' class=\"comment-content\">${comment.comment}</span>\n\t\t\t\t\t  ${\n                          !token\n                              ? ''\n                              : `<button class=\"edit-button add-form-button\">Редактировать</button>`\n                      }\n\t\t\t\t\t</div>        \n\t\t\t\t </div>\n\t\t\t\t <div class=\"comment-footer\">\n\t\t\t\t ${\n                     !token\n                         ? `<div class=\"likes\">\n\t\t\t\t\t  <span disabled class=\"likes-counter\">${comment.like}</span>\n\t\t\t\t\t  <button disabled data-index='${index}' class=\"like-button ${comment.userLike ? '-active-like' : ''}\"></button>\n\t\t\t\t\t</div> `\n                         : `<div class=\"likes\">\n\t\t\t\t\t  <span class=\"likes-counter\">${comment.like}</span>\n\t\t\t\t\t  <button data-index='${index}' class=\"like-button ${comment.userLike ? '-active-like' : ''}\"></button>\n\t\t\t\t\t</div>`\n                 }  \n\t\t\t\t </div>\n\t\t\t  </li>\n\t\t\t  `\n            }\n        })\n        .join('')\n\n    const appHtml = `\n\t<div class=\"container\">\n\t<div id=\"add-sign\"></div>\n\n\t<ul class=\"comments\" id=\"list\">\n\t  <!-- Список рендерится из Js -->\n\t  ${commentsHtml}\n\t</ul>\n\t${\n        !token\n            ? `<div class=\"form-registration\">\n\t\t<p>Чтобы добавить комментарий <a id=\"login-link\" \n\t\tclass=\"form-registration-text\" href=\"#\" >авторизуйтесь</a></p>\n\t  </div>`\n            : `<div class=\"add-form\">\n\t  <input disabled\n\t\t type=\"text\"\n\t\t class=\"add-form-name user-name\"\n\t\t placeholder=\"${user}\" \n\t\t id=\"name-input\"\n\t  />\n\t  <textarea\n\t\t type=\"textarea\"\n\t\t class=\"add-form-text\"\n\t\t placeholder=\"Введите ваш коментарий\"\n\t\t rows=\"4\"\n\t\t id=\"comment-input\"\n\t  ></textarea>\n\t  <div class=\"add-form-row\">\n\t\t <button type=\"submit\" id=\"add-button\" class=\"add-form-button post-button\">Написать</button>\n\t\t <button id=\"delete-button\" class=\"delete-button add-form-button\">Удалить</button>\n\t  </div>\n\t</div>\n\t`\n    }\n\t</div>\n </div>`\n    appEl.innerHTML = appHtml\n\n    document.addEventListener('DOMContentLoaded', () => {\n        const nameInputElement = document.getElementById('name-input')\n        const savedUsername = localStorage.getItem('user')\n\n        if (savedUsername) {\n            nameInputElement.value = savedUsername\n        }\n        renderApp(comments)\n    })\n\n    const linkToLogin = document.getElementById('login-link')\n    linkToLogin?.addEventListener('click', () => {\n        ;(0,_components_login_components_js__WEBPACK_IMPORTED_MODULE_2__.renderLoginComponent)({\n            appEl,\n            setToken: (newToken) => {\n                token = newToken\n            },\n            fetchAndRenderComments: _api_js__WEBPACK_IMPORTED_MODULE_1__.fetchAndRenderComments,\n        })\n        return\n    })\n\n    ;(0,_main_js__WEBPACK_IMPORTED_MODULE_0__.likes)(comments)\n    ;(0,_main_js__WEBPACK_IMPORTED_MODULE_0__.handleEdit)(comments)\n    ;(0,_main_js__WEBPACK_IMPORTED_MODULE_0__.handleSave)(comments)\n    ;(0,_main_js__WEBPACK_IMPORTED_MODULE_0__.editButtonsComment)(comments)\n    ;(0,_main_js__WEBPACK_IMPORTED_MODULE_0__.commentElementsQuoted)(comments)\n    ;(0,_main_js__WEBPACK_IMPORTED_MODULE_0__.saveButtons)(comments)\n\n    const buttonElement = document.getElementById('add-button')\n    const nameInputElement = document.getElementById('name-input')\n    buttonElement?.addEventListener('click', () => {\n        const commentInputElement = document.getElementById('comment-input')\n        commentInputElement.addEventListener('input', function () {\n            commentInputElement.classList.remove('error')\n        })\n        let savedUserName = localStorage.getItem('user')\n\n        if (commentInputElement.value.trim() === '') {\n            commentInputElement.classList.add('error')\n            return\n        }\n        if (savedUserName) {\n            nameInputElement.value = savedUserName\n        }\n        nameInputElement.classList.remove('error')\n        commentInputElement.classList.remove('error')\n\n        buttonElement.disabled = true\n        buttonElement.textContent = 'Комментарий добавляется...'\n        ;(0,_api_js__WEBPACK_IMPORTED_MODULE_1__.addTodo)(savedUserName, commentInputElement, buttonElement)\n    })\n\n    const deleteButtons = document.querySelectorAll('.delete-button')\n    for (const deleteButton of deleteButtons) {\n        deleteButton.addEventListener('click', (event) => {\n            event.stopPropagation()\n            if (comments.length > 0) {\n                comments.pop()\n                renderApp(comments)\n            }\n        })\n    }\n}\n\n\n\n\n//# sourceURL=webpack://8/./render.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./main.js");
/******/ 	
/******/ })()
;